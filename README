The repository contains the code for the accelerated version of Airfoil.
The interesting part is in mesh_part.c which contains the partitioning and ordering code.
airfoil.cpp is a simple sequential implementation of Airfoil that showcases the logic of the program.
MaxCompilerDesign/ contains the Eclipse (MaxIDE) project for the FPGA design. The interesting files in there
are ResCalcKernel.java which specifies the kernel and ResControlSM.maxj which specifies the state machine
that controls the I/O to and from the chip.

A Makefile is provided for the host side. The code requires the METIS API, so you'll have to change
the METIS paths in the Makefile to point to your installation of METIS.

mesh_part.c also generates a top-level coloured graph with the halo region sizes between each pair of partitions
as edge-weights. This is in the form of a .dot graph. To make that graph use the make graph target, this will
put the generated graph in the graphs/ directory.

Note that currently the project is focused on accelerating the res_calc kernel of airfoil.

in order to run the run_mesh_fpga_sim script, the simulation libraries must be loaded.
I recommend adding the following alias to the ~/.cshrc file (for CSH obviously):
alias maxsimlib "setenv MAXLERORSDIR $MAXCOMPILERDIR/lib/maxeleros-sim ; setenv LD_PRELOAD $MAXELEROSDIR/lib/libmaxeleros.so"
Now you can load the simulation libraries with 'maxsimlib' and run the simulation with run_mesh_fpga.
The simulation log will be stored in /tmp/ResSim.log . WARNING: The simulation log can get 100s of Megabytes in size,
so keep that in mind if your disk space is controlled by a quota system.
